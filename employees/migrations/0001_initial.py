# Generated by Django 5.2.5 on 2025-10-01 02:14

import django.core.validators
import django.db.models.deletion
import simple_history.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('people', '0016_historicalrole_short_name_role_short_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekly_hours', models.DecimalField(decimal_places=2, help_text='Nominal weekly working hours (e.g. 10.00).', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Weekly hours')),
                ('saldo_minutes', models.IntegerField(default=0, help_text='Time-account balance across months.', verbose_name='Running balance (minutes)')),
                ('start_override', models.DateField(blank=True, null=True, verbose_name='Employment start (override)')),
                ('end_override', models.DateField(blank=True, null=True, verbose_name='Employment end (override)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('person_role', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='employment', to='people.personrole', verbose_name='Assignment')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='EmploymentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.CharField(choices=[('ZV', 'Zusatzvereinbarung'), ('DV', 'Dienstvertrag'), ('AA', 'Abwesenheitsantrag'), ('KM', 'Krankmeldung'), ('ZZ', 'Other / Miscellaneous')], max_length=2, verbose_name='Kind')),
                ('title', models.CharField(blank=True, max_length=160, verbose_name='Title/Subject')),
                ('details', models.TextField(blank=True, verbose_name='Details / body')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='employee/docs/%Y/%m/', verbose_name='PDF file (optional)')),
                ('code', models.CharField(blank=True, help_text='Auto-generated.', max_length=80, unique=True, verbose_name='Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='employees.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Employment document',
                'verbose_name_plural': 'Employment documents',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='HistoricalEmployee',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('weekly_hours', models.DecimalField(decimal_places=2, help_text='Nominal weekly working hours (e.g. 10.00).', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Weekly hours')),
                ('saldo_minutes', models.IntegerField(default=0, help_text='Time-account balance across months.', verbose_name='Running balance (minutes)')),
                ('start_override', models.DateField(blank=True, null=True, verbose_name='Employment start (override)')),
                ('end_override', models.DateField(blank=True, null=True, verbose_name='Employment end (override)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person_role', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='people.personrole', verbose_name='Assignment')),
            ],
            options={
                'verbose_name': 'historical Employee',
                'verbose_name_plural': 'historical Employees',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEmploymentDocument',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('kind', models.CharField(choices=[('ZV', 'Zusatzvereinbarung'), ('DV', 'Dienstvertrag'), ('AA', 'Abwesenheitsantrag'), ('KM', 'Krankmeldung'), ('ZZ', 'Other / Miscellaneous')], max_length=2, verbose_name='Kind')),
                ('title', models.CharField(blank=True, max_length=160, verbose_name='Title/Subject')),
                ('details', models.TextField(blank=True, verbose_name='Details / body')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('pdf_file', models.TextField(blank=True, max_length=100, null=True, verbose_name='PDF file (optional)')),
                ('code', models.CharField(blank=True, db_index=True, help_text='Auto-generated.', max_length=80, verbose_name='Code')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('employee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee', verbose_name='Employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Employment document',
                'verbose_name_plural': 'historical Employment documents',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalHolidayCalendar',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=120, verbose_name='Name')),
                ('is_active', models.BooleanField(default=False, help_text='Use this calendar by default.', verbose_name='Active')),
                ('rules_text', models.TextField(blank=True, help_text='One per line. Examples:\n  01-06 | Epiphany | Heilige Drei KÃ¶nige\n  EASTER+39 | Ascension Day | Christi Himmelfahrt\n  2025-05-09 | Bridge Day | Fenstertag\n', verbose_name='Rules')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Holiday calendar',
                'verbose_name_plural': 'historical Holiday calendars',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTimeSheet',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(9999)], verbose_name='Year')),
                ('month', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Month')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Submitted at')),
                ('approved_at_wiref', models.DateTimeField(blank=True, null=True, verbose_name='Approved by WiRef at')),
                ('approved_at_chair', models.DateTimeField(blank=True, null=True, verbose_name='Approved by Chair at')),
                ('opening_saldo_minutes', models.IntegerField(default=0, verbose_name='Opening balance (minutes)')),
                ('expected_minutes', models.IntegerField(default=0, verbose_name='Expected minutes')),
                ('worked_minutes', models.IntegerField(default=0, verbose_name='Worked minutes')),
                ('credit_minutes', models.IntegerField(default=0, verbose_name='Credit minutes (leave/sick/etc.)')),
                ('closing_saldo_minutes', models.IntegerField(default=0, verbose_name='Closing balance (minutes)')),
                ('pdf_file', models.TextField(blank=True, max_length=100, null=True, verbose_name='Signed PDF (optional)')),
                ('export_payload', models.JSONField(blank=True, null=True, verbose_name='Export payload (optional)')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('employee', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.employee', verbose_name='Employee')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Timesheet',
                'verbose_name_plural': 'historical Timesheets',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HolidayCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, unique=True, verbose_name='Name')),
                ('is_active', models.BooleanField(default=False, help_text='Use this calendar by default.', verbose_name='Active')),
                ('rules_text', models.TextField(blank=True, help_text='One per line. Examples:\n  01-06 | Epiphany | Heilige Drei KÃ¶nige\n  EASTER+39 | Ascension Day | Christi Himmelfahrt\n  2025-05-09 | Bridge Day | Fenstertag\n', verbose_name='Rules')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Holiday calendar',
                'verbose_name_plural': 'Holiday calendars',
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_active', True)), fields=('is_active',), name='uq_holidaycalendar_single_active_true')],
            },
        ),
        migrations.CreateModel(
            name='TimeSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(9999)], verbose_name='Year')),
                ('month', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='Month')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Submitted at')),
                ('approved_at_wiref', models.DateTimeField(blank=True, null=True, verbose_name='Approved by WiRef at')),
                ('approved_at_chair', models.DateTimeField(blank=True, null=True, verbose_name='Approved by Chair at')),
                ('opening_saldo_minutes', models.IntegerField(default=0, verbose_name='Opening balance (minutes)')),
                ('expected_minutes', models.IntegerField(default=0, verbose_name='Expected minutes')),
                ('worked_minutes', models.IntegerField(default=0, verbose_name='Worked minutes')),
                ('credit_minutes', models.IntegerField(default=0, verbose_name='Credit minutes (leave/sick/etc.)')),
                ('closing_saldo_minutes', models.IntegerField(default=0, verbose_name='Closing balance (minutes)')),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='employee/timesheets/%Y/%m/', verbose_name='Signed PDF (optional)')),
                ('export_payload', models.JSONField(blank=True, null=True, verbose_name='Export payload (optional)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='timesheets', to='employees.employee', verbose_name='Employee')),
            ],
            options={
                'verbose_name': 'Timesheet',
                'verbose_name_plural': 'Timesheets',
                'ordering': ('-year', '-month', '-id'),
            },
        ),
        migrations.CreateModel(
            name='TimeEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('kind', models.CharField(choices=[('WORK', 'Work'), ('LEAVE', 'Leave (paid)'), ('SICK', 'Sick (paid)'), ('PUBHOL', 'Public holiday'), ('OTHER', 'Other')], default='WORK', max_length=6, verbose_name='Kind')),
                ('minutes', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Minutes')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Start (optional)')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='End (optional)')),
                ('comment', models.CharField(blank=True, max_length=240, verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('timesheet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='employees.timesheet', verbose_name='Timesheet')),
            ],
            options={
                'verbose_name': 'Time entry',
                'verbose_name_plural': 'Time entries',
                'ordering': ('date', 'id'),
            },
        ),
        migrations.CreateModel(
            name='HistoricalTimeEntry',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('kind', models.CharField(choices=[('WORK', 'Work'), ('LEAVE', 'Leave (paid)'), ('SICK', 'Sick (paid)'), ('PUBHOL', 'Public holiday'), ('OTHER', 'Other')], default='WORK', max_length=6, verbose_name='Kind')),
                ('minutes', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Minutes')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Start (optional)')),
                ('end_time', models.TimeField(blank=True, null=True, verbose_name='End (optional)')),
                ('comment', models.CharField(blank=True, max_length=240, verbose_name='Comment')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('timesheet', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='employees.timesheet', verbose_name='Timesheet')),
            ],
            options={
                'verbose_name': 'historical Time entry',
                'verbose_name_plural': 'historical Time entries',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['person_role'], name='employees_e_person__b16e16_idx'),
        ),
        migrations.AddIndex(
            model_name='employmentdocument',
            index=models.Index(fields=['employee'], name='employees_e_employe_937499_idx'),
        ),
        migrations.AddIndex(
            model_name='employmentdocument',
            index=models.Index(fields=['kind'], name='employees_e_kind_c9259e_idx'),
        ),
        migrations.AddIndex(
            model_name='employmentdocument',
            index=models.Index(fields=['code'], name='employees_e_code_22dedb_idx'),
        ),
        migrations.AddConstraint(
            model_name='employmentdocument',
            constraint=models.CheckConstraint(condition=models.Q(('end_date__isnull', True), ('start_date__isnull', True), ('end_date__gte', models.F('start_date')), _connector='OR'), name='ck_empdoc_dates_order'),
        ),
        migrations.AddConstraint(
            model_name='employmentdocument',
            constraint=models.CheckConstraint(condition=models.Q(('code', ''), _negated=True), name='ck_empdoc_code_nonempty'),
        ),
        migrations.AddIndex(
            model_name='timesheet',
            index=models.Index(fields=['employee', 'year', 'month'], name='employees_t_employe_5f1ed7_idx'),
        ),
        migrations.AddConstraint(
            model_name='timesheet',
            constraint=models.CheckConstraint(condition=models.Q(('month__gte', 1), ('month__lte', 12)), name='ck_timesheet_month_range'),
        ),
        migrations.AlterUniqueTogether(
            name='timesheet',
            unique_together={('employee', 'year', 'month')},
        ),
        migrations.AddIndex(
            model_name='timeentry',
            index=models.Index(fields=['timesheet', 'date'], name='employees_t_timeshe_631c43_idx'),
        ),
        migrations.AddConstraint(
            model_name='timeentry',
            constraint=models.UniqueConstraint(fields=('timesheet', 'date', 'kind', 'comment'), name='uq_timesheet_date_kind_comment'),
        ),
        migrations.AddConstraint(
            model_name='timeentry',
            constraint=models.CheckConstraint(condition=models.Q(('minutes__gte', 0)), name='ck_timeentry_minutes_nonneg'),
        ),
    ]
