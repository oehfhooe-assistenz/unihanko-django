# Generated by Django 5.2.5 on 2025-10-16 19:29

import django.db.models.deletion
import hankosign.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('people', '0016_historicalrole_short_name_role_short_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb', models.CharField(choices=[('SUBMIT', 'Submit'), ('VERIFY', 'Verify'), ('APPROVE', 'Approve'), ('RELEASE', 'Release/Print')], max_length=20, verbose_name='Verb')),
                ('stage', models.CharField(blank=True, help_text='Optional: e.g. WIREF, CHAIR …', max_length=32, verbose_name='Stage code')),
                ('human_label', models.CharField(max_length=160, verbose_name='Label')),
                ('comment', models.TextField(blank=True, verbose_name='Comment/help')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('scope', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hankosign_actions', to='contenttypes.contenttype', verbose_name='Scope (model)')),
            ],
            options={
                'verbose_name': 'Action',
                'verbose_name_plural': 'Actions',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAction',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('verb', models.CharField(choices=[('SUBMIT', 'Submit'), ('VERIFY', 'Verify'), ('APPROVE', 'Approve'), ('RELEASE', 'Release/Print')], max_length=20, verbose_name='Verb')),
                ('stage', models.CharField(blank=True, help_text='Optional: e.g. WIREF, CHAIR …', max_length=32, verbose_name='Stage code')),
                ('human_label', models.CharField(max_length=160, verbose_name='Label')),
                ('comment', models.TextField(blank=True, verbose_name='Comment/help')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('scope', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype', verbose_name='Scope (model)')),
            ],
            options={
                'verbose_name': 'historical Action',
                'verbose_name_plural': 'historical Actions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPolicy',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('require_distinct_signer', models.BooleanField(default=False, help_text='If enabled, the same person cannot perform multiple gated stages on the same object.', verbose_name='Require distinct signer from earlier stage')),
                ('notes', models.CharField(blank=True, max_length=240, verbose_name='Notes')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='hankosign.action', verbose_name='Action')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='people.role', verbose_name='Role')),
            ],
            options={
                'verbose_name': 'historical Policy',
                'verbose_name_plural': 'historical Policies',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSignatory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified (specimen on file)')),
                ('name_override', models.CharField(blank=True, max_length=160, verbose_name='Printed name (override)')),
                ('base_key', models.CharField(default=hankosign.models._default_base_key, editable=False, max_length=64, verbose_name='Signer secret')),
                ('pdf_specimen', models.TextField(blank=True, max_length=100, null=True, verbose_name='Signature specimen (PDF)')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Updated at')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person_role', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='people.personrole', verbose_name='Assignment')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'historical Signatory',
                'verbose_name_plural': 'historical Signatories',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('require_distinct_signer', models.BooleanField(default=False, help_text='If enabled, the same person cannot perform multiple gated stages on the same object.', verbose_name='Require distinct signer from earlier stage')),
                ('notes', models.CharField(blank=True, max_length=240, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='policies', to='hankosign.action', verbose_name='Action')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hankosign_policies', to='people.role', verbose_name='Role')),
            ],
            options={
                'verbose_name': 'Policy',
                'verbose_name_plural': 'Policies',
            },
        ),
        migrations.CreateModel(
            name='Signatory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Verified (specimen on file)')),
                ('name_override', models.CharField(blank=True, max_length=160, verbose_name='Printed name (override)')),
                ('base_key', models.CharField(default=hankosign.models._default_base_key, editable=False, max_length=64, verbose_name='Signer secret')),
                ('pdf_specimen', models.FileField(blank=True, null=True, upload_to='signatures/specimen/%Y/%m/', verbose_name='Signature specimen (PDF)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('person_role', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='signatories', to='people.personrole', verbose_name='Assignment')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='signatory', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Signatory',
                'verbose_name_plural': 'Signatories',
            },
        ),
        migrations.CreateModel(
            name='HistoricalSignature',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('object_id', models.CharField(max_length=64)),
                ('verb', models.CharField(max_length=20)),
                ('stage', models.CharField(blank=True, max_length=32)),
                ('at', models.DateTimeField(blank=True, editable=False)),
                ('note', models.CharField(blank=True, max_length=240)),
                ('payload', models.JSONField(blank=True, null=True)),
                ('signature_id', models.CharField(db_index=True, editable=False, max_length=64)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('action', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='hankosign.action')),
                ('content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('scope_ct', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('signatory', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='hankosign.signatory', verbose_name='Signatory')),
            ],
            options={
                'verbose_name': 'historical Signature',
                'verbose_name_plural': 'historical Signatures',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.CharField(max_length=64)),
                ('verb', models.CharField(max_length=20)),
                ('stage', models.CharField(blank=True, max_length=32)),
                ('at', models.DateTimeField(auto_now_add=True)),
                ('note', models.CharField(blank=True, max_length=240)),
                ('payload', models.JSONField(blank=True, null=True)),
                ('signature_id', models.CharField(db_index=True, editable=False, max_length=64)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='signatures', to='hankosign.action')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='contenttypes.contenttype')),
                ('scope_ct', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='contenttypes.contenttype')),
                ('signatory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='signatures', to='hankosign.signatory', verbose_name='Signatory')),
            ],
            options={
                'verbose_name': 'Signature',
                'verbose_name_plural': 'Signatures',
                'ordering': ('-at', '-id'),
            },
        ),
        migrations.AddIndex(
            model_name='action',
            index=models.Index(fields=['scope', 'verb', 'stage'], name='hankosign_a_scope_i_8f3fe8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='action',
            unique_together={('verb', 'stage', 'scope')},
        ),
        migrations.AddIndex(
            model_name='policy',
            index=models.Index(fields=['role', 'action'], name='hankosign_p_role_id_9a24ca_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='policy',
            unique_together={('role', 'action')},
        ),
        migrations.AddConstraint(
            model_name='signatory',
            constraint=models.UniqueConstraint(condition=models.Q(('user__isnull', False)), fields=('user',), name='uq_signatory_user'),
        ),
        migrations.AddIndex(
            model_name='signature',
            index=models.Index(fields=['content_type', 'object_id'], name='hankosign_s_content_9bd217_idx'),
        ),
        migrations.AddIndex(
            model_name='signature',
            index=models.Index(fields=['verb', 'stage'], name='hankosign_s_verb_4ce5e2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='signature',
            unique_together={('content_type', 'object_id', 'verb', 'stage')},
        ),
    ]
